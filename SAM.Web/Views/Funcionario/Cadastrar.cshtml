@model SAM.Web.ViewModels.Funcionario.FuncionarioCadastrarViewModel

@{
    ViewBag.Title = "Cadastrar funcionário";
    Layout = "~/Views/Shared/_LayoutLogado.cshtml";
}

@section JavascriptSection{
    <script src="@Url.Content("~/Scripts/Funcionario/Cadastrar.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.mask.min.js")"></script>
    <script>
        $(function () {
            $('#DataNascimento').mask('11/11/1111');
            $('#DataFuncao').mask('11/11/1111');
            $('#Telefone').mask('(99) 9999-9999');
            $('#Celular').mask('(99) 9999-99999');
        });

        $('#formCadastrar').submit(function () {
            alert($('#Command').val());
            });
    </script>
}

<fieldset>
    <div class="row" style="margin: 0px; padding: 0px;">
        <div class="sixth">
            <form id="fileUpload" action="/Upload/UploadFiles" method="post" enctype="multipart/form-data" style="margin: 0px; padding: 0px;">
                <img id="fotoFuncionario" src="@Url.Content(!string.IsNullOrEmpty(Model.Foto) ? "/imagem/" + Model.Foto : "/Imagens/usuario.png")" style="height: 100px; width: 100px; cursor: pointer;" title="Clique na imagem para alterar."/>
                <input id="inputFile" type="file" name="files[]">
            </form>
        </div>
        <div class="fivesixth" style="vertical-align: bottom;">
            <h3><span id="spanNome"></span></h3>
        </div>
    </div>
</fieldset>

<!--<form method="post" action="~/Funcionario/Cadastrar/" class="forms columnar 1" id="formCadastrar">-->
@using (Html.BeginForm("Cadastrar", "Funcionario", FormMethod.Post, new { @id="formCadastrar", @class = "forms columnar 1" }))
{
    @Html.HiddenFor(model => model.IdUsuario)
    @Html.HiddenFor(model => model.IdFuncionario)
    @Html.HiddenFor(model => model.IdEmpresa)
    @Html.HiddenFor(model => model.LoginInicial)
    @Html.HiddenFor(model => model.DominioEmpresa)
    @Html.HiddenFor(model => model.Foto)
    @Html.HiddenFor(model => model.IdGestor)
    <h4>Dados Pessoais</h4>
    <fieldset>
        <ul>
            <li>
                <fieldset>
                    <section>
                        <label for="" class="bold">Ativo</label>
                    </section>
                    @if (!HttpContext.Current.User.IsInRole("Administrador do sistema"))
                    {   
                        @Html.HiddenFor(model => model.Ativo)
                        <input type="checkbox" id="Ativo" name="Ativo" @(@Model.Ativo ? "checked" : "") disabled="disabled" value="true">
                    }
                    else
                    {
                        <input type="checkbox" name="Ativo" @(@Model.Ativo ? "checked" : "") value="true">
                    }
                </fieldset>
            </li>

            <li>
                @Html.LabelFor(model => model.Nome, new { @class = "bold" })
                @Html.TextBoxFor(model => model.Nome, new { @size = "40", @autofocus = "", @maxlength = "100" })
                <div class="descr">@Html.ValidationMessageFor(model => model.Nome, null, new { @class = "validacao" })</div>
            </li>

            <li>
                @Html.LabelFor(model => model.Login, new { @class = "bold" })
                @Html.TextBoxFor(model => model.Login, new { @size = "40", @maxlength = "100" })@@@Model.DominioEmpresa
                <div class="descr">@Html.ValidationMessageFor(model => model.Login, null, new { @class = "validacao" })</div>
            </li>

            @if (@Model.IdUsuario == 0)
            {
                <li>
                    @Html.LabelFor(model => model.Senha, new { @class = "bold" })
                    @Html.TextBoxFor(model => model.Senha, new { @size = "40", @maxlength = "20" })
                    <div class="descr">Digite a senha inicial. @Html.ValidationMessageFor(model => model.Senha, null, new { @class = "validacao" })</div>
                </li>
            }

            @if (!HttpContext.Current.User.IsInRole("Administrador do sistema"))
            {
                @Html.HiddenFor(model => model.IdPapel)
                <li>
                    <label for="" class="bold">Papel base</label>
                    @Html.DropDownListFor(model => model.IdPapel, new SelectList(Model.ListaPapel, "IdPapel", "Descricao")
                                        .Concat(Enumerable.Repeat(new SelectListItem() { Value = "", Text = "-- Selecione o Papel" }, 1))
                                        .OrderBy(p => p.Text), new { @disabled = "disabled" })
                    <div class="descr">@Html.ValidationMessageFor(model => model.IdPapel, null, new { @class = "validacao" })</div>
                </li>
            }
            else
            {
                <li>
                    <label for="" class="bold">Papel base</label>
                    @Html.DropDownListFor(model => model.IdPapel, new SelectList(Model.ListaPapel, "IdPapel", "Descricao")
                                        .Concat(Enumerable.Repeat(new SelectListItem() { Value = "", Text = "-- Selecione o Papel" }, 1))
                                        .OrderBy(p => p.Text))
                    <div class="descr">@Html.ValidationMessageFor(model => model.IdPapel, null, new { @class = "validacao" })</div>
                </li>
            }

            <li>
                @Html.LabelFor(model => model.Email, new { @class = "bold" })
                @Html.TextBoxFor(model => model.Email, new { @size = "40", @maxlength = "100" })
                <div class="descr">@Html.ValidationMessageFor(model => model.Email, null, new { @class = "validacao" })</div>
            </li>

            <li>
                @Html.LabelFor(model => model.Matricula, new { @class = "bold" })
                @Html.TextBoxFor(model => model.Matricula, new { @size = "40", @maxlength = "20" })
                <div class="descr">@Html.ValidationMessageFor(model => model.Matricula, null, new { @class = "validacao" })</div>
            </li>
            <li>
                @Html.LabelFor(model => model.Sexo, new { @class = "bold" })

                @Html.DropDownListFor(model => model.Sexo, new SelectList(Model.ListaSexo, "SiglaSexo", "Descricao")
                                        .Concat(Enumerable.Repeat(new SelectListItem() { Value = "", Text = "-- Selecione o Sexo" }, 1))
                                        .OrderBy(p => p.Text))
            </li>
            <li>
                @Html.LabelFor(model => model.Skype, new { @class = "bold" })
                @Html.TextBoxFor(model => model.Skype, new { @size = "40", @maxlength = "45" })
                <div class="descr">@Html.ValidationMessageFor(model => model.Skype, null, new { @class = "validacao" })</div>
            </li>

            <li>
                @Html.LabelFor(model => model.DataNascimento, new { @class = "bold" })
                @Html.TextBoxFor(model => model.DataNascimento, new { @size = "40", @maxlength = "10" })
                <div class="descr">@Html.ValidationMessageFor(model => model.DataNascimento, null, new { @class = "validacao" })</div>

            </li>
            <li>
                @Html.LabelFor(model => model.DataFuncao, new { @class = "bold" })
                @Html.TextBoxFor(model => model.DataFuncao, new { @size = "40", @maxlength = "10" })
                <div class="descr">@Html.ValidationMessageFor(model => model.DataFuncao, null, new { @class = "validacao" })</div>
            </li>

            <li>
                @Html.LabelFor(model => model.Telefone, new { @class = "bold" })
                @Html.TextBoxFor(model => model.Telefone, new { @size = "40", @maxlength = "30" })
                <div class="descr">Ex: (41) 3333-3333 @Html.ValidationMessageFor(model => model.Telefone, null, new { @class = "validacao" })</div>
            </li>
            <li>
                @Html.LabelFor(model => model.Celular, new { @class = "bold" })
                @Html.TextBoxFor(model => model.Celular, new { @size = "40", @maxlength = "30" })
                <div class="descr">Ex: (41) 8888-8888 ou (11) 98888-8888 @Html.ValidationMessageFor(model => model.Celular, null, new { @class = "validacao" })</div>
            </li>
            <li>
                @Html.LabelFor(model => model.NomeGestor, new { @class = "bold" })
                @Html.TextBoxFor(model => model.NomeGestor, new { @size = "40", @readonly = "readonly" })
                <button type="button" class="btn btn-append" onclick="abrirModalPesquisarGestor();"><i class="halflings cog"></i>Pesquisar</button>
                <div class="descr">@Html.ValidationMessageFor(model => model.IdGestor, null, new { @class = "validacao" })</div>
            </li>

            <li>
                <label for="" class="bold">Empresa</label>
                @Model.NomeEmpresa
            </li>
            <li>
                <label for="" class="bold">Departamento</label>
                @Html.DropDownListFor(model => model.IdDepartamento, new SelectList(Model.ListaDepartamento, "IdDepartamento", "Descricao")
                                        .Concat(Enumerable.Repeat(new SelectListItem() { Value = "", Text = "-- Selecione o Departamento" }, 1))
                                        .OrderBy(p => p.Text))
                <div class="descr">@Html.ValidationMessageFor(model => model.IdDepartamento, null, new { @class = "validacao" })</div>
            </li>
            <li>
                <label for="" class="bold">Função</label>
                @Html.DropDownListFor(model => model.IdCargo, new SelectList(Model.ListaCargo, "IdCargo", "Descricao")
                                        .Concat(Enumerable.Repeat(new SelectListItem() { Value = "", Text = "-- Selecione o Cargo" }, 1))
                                        .OrderBy(p => p.Text))
                <div class="descr">@Html.ValidationMessageFor(model => model.IdCargo, null, new { @class = "validacao" })</div>
            </li>
        </ul>

    </fieldset>
    <!--
    <h4>Endereço</h4>
    <fieldset>
        <ul>
            <li>
                <label for="" class="bold">Rua</label>
                <input type="text" name="" id="" size="40" value="" />
            </li>
            <li>
                <label for="" class="bold">CEP</label>
                <input type="text" name="" id="" size="40" value="" />
            </li>
            <li>
                <label for="" class="bold">Cidade</label>
                <input type="text" name="" id="" size="40" value="" />
            </li>
            <li>
                <label for="" class="bold">Estado</label>
                <input type="text" name="" id="" size="40" value="" />
            </li>
        </ul>
    </fieldset>
    -->
    <ul>
        <li class="push">
            <input type="hidden" id="acao" name="acao" value="" />
            <input type="submit" class="btn" value="Salvar" onclick="$('#acao').val($(this).val());" />
            <input type="submit" class="btn" value="Salvar e Novo" onclick="$('#acao').val($(this).val());" />
            <input type="button" class="btn" value="Voltar" onclick="Voltar();" />
        </li>
    </ul>
}
<!--</form>-->
